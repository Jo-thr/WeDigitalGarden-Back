openapi: 3.0.0
info:
  title: 'WeDigital Garden - Core API'
  description: 'Documentation of Core API for We Digital Garden'
  version: 0.0.1
servers:
  -
    url: 'http://localhost'
paths:
  /api/clients:
    get:
      tags:
        - Client
      summary: 'Display a collection of clients ressources.'
      operationId: 'App\Http\Controllers\Api\ClientController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A clients collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_collection_resource'
        '404':
          description: 'A clients collection not found'
  '/api/clients/{id}':
    get:
      tags:
        - Client
      summary: 'Display the specified client resource.'
      operationId: 'App\Http\Controllers\Api\ClientController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the office to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One client'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_resource'
        '404':
          description: 'A client not found'
  /api/contact:
    post:
      tags:
        - Contact
      summary: 'Send a email with data of contact form'
      operationId: 'App\Http\Controllers\Api\ContactController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'Email is send'
  /api/contact/startup:
    post:
      tags:
        - Contact
      summary: 'Send a email with data of contact form'
      operationId: 'App\Http\Controllers\Api\ContactController::startup'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'Email is send'
  /api/expertises:
    get:
      tags:
        - Expertise
      summary: 'Display a collection of expertises ressources.'
      operationId: 'App\Http\Controllers\Api\ExpertiseController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A expertises collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expertise_collection_resource'
        '404':
          description: 'A expertises collection not found'
  '/api/expertises/{lang}':
    get:
      tags:
        - Expertise
      summary: 'Display a collection of expertises with specific language ressources.'
      operationId: 'App\Http\Controllers\Api\ExpertiseController::getAllWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'A expertises collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expertise_with_lang_collection_resource'
        '404':
          description: 'A expertises collection not found'
  '/api/expertises/{id}':
    get:
      tags:
        - Expertise
      summary: 'Display the specified expertise resource.'
      operationId: 'App\Http\Controllers\Api\ExpertiseController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the office to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One expertise'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expertise_resource'
        '404':
          description: 'A expertise not found'
  '/api/expertises/{slug}':
    get:
      tags:
        - Expertise
      summary: 'Display the specified expertise resource.'
      operationId: 'App\Http\Controllers\Api\ExpertiseController::getOneBySlug'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the expertise to get'
          required: true
      responses:
        '200':
          description: 'One expertise'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expertise_resource'
        '404':
          description: 'A expertise not found'
  '/api/expertises/{id}/{lang}':
    get:
      tags:
        - Expertise
      summary: 'Display the specified expertise with specific language resource.'
      operationId: 'App\Http\Controllers\Api\ExpertiseController::getOneWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the office to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One expertise'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expertise_with_lang_resource'
        '404':
          description: 'A expertise not found'
  '/api/expertises/{slug}/{lang}':
    get:
      tags:
        - Expertise
      summary: 'Display the specified expertise with specific language resource.'
      operationId: 'App\Http\Controllers\Api\ExpertiseController::getOneBySlugWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the office to get'
          required: true
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One expertise'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expertise_with_lang_resource'
        '404':
          description: 'A expertise not found'
  /api/formules:
    get:
      tags:
        - Formule
      summary: 'Display a collection of formules ressources.'
      operationId: 'App\Http\Controllers\Api\FormuleController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A formules collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/formule_collection_resource'
        '404':
          description: 'A formules collection not found'
  '/api/formules/{lang}':
    get:
      tags:
        - Formule
      summary: 'Display a collection of formules with specific language ressources.'
      operationId: 'App\Http\Controllers\Api\FormuleController::getAllWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'A formules collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/formule_with_lang_collection_resource'
        '404':
          description: 'A formules collection not found'
  '/api/formules/{id}':
    get:
      tags:
        - Formule
      summary: 'Display the specified formule resource.'
      operationId: 'App\Http\Controllers\Api\FormuleController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the office to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One formule'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/formule_resource'
        '404':
          description: 'A formule not found'
  '/api/formules/{id}/{lang}':
    get:
      tags:
        - Formule
      summary: 'Display the specified formule with specific language resource.'
      operationId: 'App\Http\Controllers\Api\FormuleController::getOneWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the office to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One formule'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/formule_with_lang_resource'
        '404':
          description: 'A formule not found'
  /api/framework/certifications:
    get:
      tags:
        - Framework
      summary: 'Display a collection of Framework certifications ressources.'
      operationId: 'App\Http\Controllers\Api\Framework\CertificationController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A Framework certifications collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certification_collection_resource'
        '404':
          description: 'A Framework certifications collection not found'
  '/api/framework/certifications/{lang}':
    get:
      tags:
        - Framework
      summary: 'Display a collection of Framework certifications with specific language ressources.'
      operationId: 'App\Http\Controllers\Api\Framework\CertificationController::getAllWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'A Framework certifications collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certification_with_lang_collection_resource'
        '404':
          description: 'A Framework certifications collection not found'
  '/api/framework/certifications/{id}':
    get:
      tags:
        - Framework
      summary: 'Display the specified framework certification resource.'
      operationId: 'App\Http\Controllers\Api\Framework\CertificationController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the framework certification to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One framework certification'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certification_resource'
        '404':
          description: 'A framework certification not found'
  '/api/framework/certifications/{id}/{lang}':
    get:
      tags:
        - Framework
      summary: 'Display the specified framework certification with specific language resource.'
      operationId: 'App\Http\Controllers\Api\Framework\CertificationController::getOneWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the framework certification to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One framework certification'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/certification_with_lang_resource'
        '404':
          description: 'A framework certification not found'
  /api/framework/values:
    get:
      tags:
        - Framework
      summary: 'Display a collection of Framework values ressources.'
      operationId: 'App\Http\Controllers\Api\Framework\ValueController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A Framework values collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value_collection_resource'
        '404':
          description: 'A Framework values collection not found'
  '/api/framework/values/{lang}':
    get:
      tags:
        - Framework
      summary: 'Display a collection of Framework values with specific language ressources.'
      operationId: 'App\Http\Controllers\Api\Framework\ValueController::getAllWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'A Framework values collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value_with_lang_collection_resource'
        '404':
          description: 'A Framework values collection not found'
  '/api/framework/values/{id}':
    get:
      tags:
        - Framework
      summary: 'Display the specified framework value resource.'
      operationId: 'App\Http\Controllers\Api\Framework\ValueController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the framework value to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One framework value'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value_resource'
        '404':
          description: 'A framework value not found'
  '/api/Framework values/{id}/{lang}':
    get:
      tags:
        - Framework
      summary: 'Display the specified framework value with specific language resource.'
      operationId: 'App\Http\Controllers\Api\Framework\ValueController::getOneWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the framework value to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One framework value'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value_with_lang_resource'
        '404':
          description: 'A framework value not found'
  /api/menus:
    get:
      tags:
        - Menu
      summary: 'Display a collection of menus ressources.'
      operationId: 'App\Http\Controllers\Api\MenuController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A menus collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_collection_resource'
        '404':
          description: 'A menus collection not found'
  '/api/menus/{lang}':
    get:
      tags:
        - Menu
      summary: 'Display a collection of menus with specific language ressources.'
      operationId: 'App\Http\Controllers\Api\MenuController::getAllWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'A menu collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_with_lang_collection_resource'
        '404':
          description: 'A menu collection not found'
  '/api/menus/{id}':
    get:
      tags:
        - Menu
      summary: 'Display the specified menu resource.'
      operationId: 'App\Http\Controllers\Api\MenuController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the menu to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One menu'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_resource'
        '404':
          description: 'A menu not found'
  '/api/menus/{id}/{lang}':
    get:
      tags:
        - Menu
      summary: 'Display the specified menu with specific language resource.'
      operationId: 'App\Http\Controllers\Api\MenuController::getOneWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the menu to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One menu'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_with_lang_resource'
        '404':
          description: 'A menu not found'
  '/api/menus/{slug}':
    get:
      tags:
        - Menu
      summary: 'Display the specified menu resource by slug.'
      operationId: 'App\Http\Controllers\Api\MenuController::getOneBySlug'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the menu to get'
          required: true
      responses:
        '200':
          description: 'One menu'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_resource'
        '404':
          description: 'A menu not found'
  '/api/menus/{slug}/{lang}':
    get:
      tags:
        - Menu
      summary: 'Display the specified menu with specific language resource.'
      operationId: 'App\Http\Controllers\Api\MenuController::getOneBySlugWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the menu to get'
          required: true
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One menu'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_with_lang_resource'
        '404':
          description: 'A menu not found'
  /api/offices:
    get:
      tags:
        - Office
      summary: 'Display a collection of offices ressources.'
      operationId: 'App\Http\Controllers\Api\OfficeController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A offices collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/office_collection_resource'
        '404':
          description: 'A offices collection not found'
  '/api/offices/{id}':
    get:
      tags:
        - Office
      summary: 'Display the specified office resource.'
      operationId: 'App\Http\Controllers\Api\OfficeController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: office_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One office'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/office_resource'
        '404':
          description: 'A office not found'
  /api/pages:
    get:
      tags:
        - Page
      summary: 'Display a collection of pages ressources.'
      operationId: 'App\Http\Controllers\Api\PageController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A pages collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_collection_resource'
        '404':
          description: 'A pages collection not found'
  '/api/pages/{lang}':
    get:
      tags:
        - Page
      summary: 'Display a collection of pages with specific language ressources.'
      operationId: 'App\Http\Controllers\Api\PageController::getAllWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'A pages collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_with_lang_collection_resource'
        '404':
          description: 'A pages collection not found'
  '/api/pages/{id}':
    get:
      tags:
        - Page
      summary: 'Display the specified page resource.'
      operationId: 'App\Http\Controllers\Api\PageController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the page to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_resource'
        '404':
          description: 'A page not found'
  '/api/pages/{slug}':
    get:
      tags:
        - Page
      summary: 'Display the specified page resource.'
      operationId: 'App\Http\Controllers\Api\PageController::getOneBySlug'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the page to get'
          required: true
      responses:
        '200':
          description: 'One page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_resource'
        '404':
          description: 'A page not found'
  '/api/pages/{id}/{lang}':
    get:
      tags:
        - Page
      summary: 'Display the specified page with specific language resource.'
      operationId: 'App\Http\Controllers\Api\PageController::getOneWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the page to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_with_lang_resource'
        '404':
          description: 'A page not found'
  '/api/pages/{slug}/{lang}':
    get:
      tags:
        - Page
      summary: 'Display the specified expertise with specific language resource.'
      operationId: 'App\Http\Controllers\Api\PageController::getOneBySlugWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the page to get'
          required: true
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_with_lang_resource'
        '404':
          description: 'A page not found'
  /api/regions:
    get:
      tags:
        - Region
      summary: 'Display a collection of regions ressources.'
      operationId: 'App\Http\Controllers\Api\RegionController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A regions collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/region_collection_resource'
        '404':
          description: 'A regions collection not found'
  '/api/regions/{lang}':
    get:
      tags:
        - Region
      summary: 'Display a collection of regions with specific language ressources.'
      operationId: 'App\Http\Controllers\Api\RegionController::getAllWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'A regions collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/region_with_lang_collection_resource'
        '404':
          description: 'A regions collection not found'
  '/api/regions/{id}':
    get:
      tags:
        - Region
      summary: 'Display the specified region resource.'
      operationId: 'App\Http\Controllers\Api\RegionController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the region to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One region'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/region_resource'
        '404':
          description: 'A region not found'
  '/api/regions/{slug}':
    get:
      tags:
        - Region
      summary: 'Display the specified region resource.'
      operationId: 'App\Http\Controllers\Api\RegionController::getOneBySlug'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the region to get'
          required: true
      responses:
        '200':
          description: 'One region'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/region_resource'
        '404':
          description: 'A region not found'
  '/api/regions/{id}/{lang}':
    get:
      tags:
        - Region
      summary: 'Display the specified region with specific language resource.'
      operationId: 'App\Http\Controllers\Api\RegionController::getOneWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the region to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One region'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/region_with_lang_resource'
        '404':
          description: 'A region not found'
  '/api/regions/{slug}/{lang}':
    get:
      tags:
        - Region
      summary: 'Display the specified expertise with specific language resource.'
      operationId: 'App\Http\Controllers\Api\RegionController::getOneBySlugWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the region to get'
          required: true
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One region'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/region_with_lang_resource'
        '404':
          description: 'A region not found'
  /api/social-media:
    get:
      tags:
        - 'Social Media'
      summary: 'Display a collection of social media ressources.'
      operationId: 'App\Http\Controllers\Api\SocialMediaController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A social media collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/social_media_collection_resource'
        '404':
          description: 'A social media collection not found'
  '/api/social-media/{id}':
    get:
      tags:
        - 'Social Media'
      summary: 'Display the specified social media resource.'
      operationId: 'App\Http\Controllers\Api\SocialMediaController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the social media to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One social media'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/social_media_resource'
        '404':
          description: 'A social media not found'
  /api/teams:
    get:
      tags:
        - Team
      summary: 'Display a collection of teams ressources.'
      operationId: 'App\Http\Controllers\Api\TeamController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A teams collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team_collection_resource'
        '404':
          description: 'A teams collection not found'
  '/api/teams/{lang}':
    get:
      tags:
        - Team
      summary: 'Display a collection of teams with specific language ressources.'
      operationId: 'App\Http\Controllers\Api\TeamController::getAllWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'A teams collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team_with_lang_collection_resource'
        '404':
          description: 'A teams collection not found'
  '/api/teams/{id}':
    get:
      tags:
        - Team
      summary: 'Display the specified team resource.'
      operationId: 'App\Http\Controllers\Api\TeamController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the team to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One team'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team_resource'
        '404':
          description: 'A team not found'
  '/api/teams/{id}/{lang}':
    get:
      tags:
        - Team
      summary: 'Display the specified team with specific language resource.'
      operationId: 'App\Http\Controllers\Api\TeamController::getOneWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the team to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One team'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team_with_lang_resource'
        '404':
          description: 'A team not found'
  /api/use-cases:
    get:
      tags:
        - 'Use Case'
      summary: 'Display a collection of use cases ressources.'
      operationId: 'App\Http\Controllers\Api\UseCaseController::index'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
      responses:
        '200':
          description: 'A use cases collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/use_case_collection_resource'
        '404':
          description: 'A use cases collection not found'
  '/api/use-cases/{lang}':
    get:
      tags:
        - 'Use Case'
      summary: 'Display a collection of use cases with specific language ressources.'
      operationId: 'App\Http\Controllers\Api\UseCaseController::getAllWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'A use cases collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/use_case_with_lang_collection_resource'
        '404':
          description: 'A use cases collection not found'
  '/api/use-cases/{id}':
    get:
      tags:
        - 'Use Case'
      summary: 'Display the specified use case resource.'
      operationId: 'App\Http\Controllers\Api\UseCaseController::getOne'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the office to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
      responses:
        '200':
          description: 'One use case'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/use_case_resource'
        '404':
          description: 'A use case not found'
  '/api/use-cases/{slug}':
    get:
      tags:
        - 'Use Case'
      summary: 'Display the specified use case resource.'
      operationId: 'App\Http\Controllers\Api\UseCaseController::getOneBySlug'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the use case to get'
          required: true
      responses:
        '200':
          description: 'One use case'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/use_case_resource'
        '404':
          description: 'A use case not found'
  '/api/use-cases/{id}/{lang}':
    get:
      tags:
        - 'Use Case'
      summary: 'Display the specified use case with specific language resource.'
      operationId: 'App\Http\Controllers\Api\UseCaseController::getOneWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: id
          in: path
          description: 'Numeric ID of the office to get'
          required: true
          schema:
            $ref: '#/components/schemas/resource_id'
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One use case'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/use_case_with_lang_resource'
        '404':
          description: 'A use case not found'
  '/api/use-cases/{slug}/{lang}':
    get:
      tags:
        - 'Use Case'
      summary: 'Display the specified use case with specific language resource.'
      operationId: 'App\Http\Controllers\Api\UseCaseController::getOneBySlugWithLang'
      parameters:
        -
          name: Content-Type
          in: header
          required: true
          schema:
            type: string
            example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
            example: XMLHttpRequest
        -
          name: slug
          in: path
          description: 'String ID of the use case to get'
          required: true
        -
          name: lang
          in: path
          description: 'String for select a specific language'
          required: true
      responses:
        '200':
          description: 'One use case'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/use_case_with_lang_resource'
        '404':
          description: 'A use case not found'
components:
  schemas:
    resource_id:
      description: 'The unique identifier of a resource'
      minimum: 1
      example: '1'
    token_resource:
      required:
        - access_token
        - token_type
        - expires_at
      properties:
        access_token:
          description: 'The token'
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjY0MTlmOWNhZWVhNDBhNDZmMGY2MzZhNzk4Y2M4M2ViZDIwMjFkNThlMjBjMzljOThhNDNjOGU3YzY4ZTAyMjQ2ZDk4OWVlMzY3ZjFkMjc5In0.eyJhdWQiOiIxIiwianRpIjoiNjQxOWY5Y2FlZWE0MGE0NmYwZjYzNmE3OThjYzgzZWJkMjAyMWQ1OGUyMGMzOWM5OGE0M2M4ZTdjNjhlMDIyNDZkOTg5ZWUzNjdmMWQyNzkiLCJpYXQiOjE1NTExNzc5MzEsIm5iZiI6MTU1MTE3NzkzMSwiZXhwIjoxNTgyNzEzOTMxLCJzdWIiOiIxNyIsInNjb3BlcyI6W119.h9IuKo7y4NliCSRN-C_Bq03c0u8FdyJ9z2XYJ1EmqbPCHGxSiKU9VYoala2A25QHDgkmmLa6UuW83HI97j5vxGyn_etX1V7DbBl2k4j3aAMHhLRJN56SI6c2_tfX0ohupyKvxyAjCWtkLwFgPGkayiL3opdQcLmqisQJJUq-7o8MV37c1RW4jnLFxGdc1DnCGt7R4rR0itWNSQOBFxmCyV5xfxC7d0zvtSI9SSgmpP6WFSXuclQsu3vA7iC52GYo3HbN3aibh2JGsmEuDeaD7Gk28Qvjl0XCzCTsXMCHrlhsc5Ul_kiRWHIi75bR_M50SOdglyp2m1D9tePbdn7lQVsI2OVdIXZc73lQjJ--YXzQCE2hF5T4Cr7br5mf7sa9XB91Tp4IG7irH4zdDfS5YOdI9RjGbLv9aanRU_azlHIC4nSiB_Yisir5RMYJQ_nCdTtJ4OJddeuHqnifjIJj1jkl7WhsRgspIqkFUuGGP_Aq347N-ybj-AV2KqQQXkXgb2Ll-jQL9p1Q3tsZuQu_SSiKs-7KhF5Yw_A6KUZopKE2nbVvUfKyHlKqVewz_VIbCXrE0UsMhw1CBSvhEZJTpPiaAfbvzzIflD1VLJZBmB9XiBZNhljmkQhRbQ_vSmcQDvAS6CGHB8BUUQsHay1RX-z5uU5LAuHjt59IMPgWSdA
        token_type:
          description: 'The type of token'
          type: string
          example: Bearer
        expires_at:
          description: 'The expires date'
          type: string
          example: '2019-03-05 10:45:31'
      type: object
    unauthorized_resource:
      required:
        - message
      properties:
        message:
          description: 'The message'
          type: string
          example: Unauthorized
      type: object
    message_resource:
      required:
        - message
      properties:
        message:
          description: 'The message'
          type: string
          example: 'message response'
      type: object
    date_resource:
      required:
        - date
        - timezone_type
        - timezone
      properties:
        date:
          description: 'the date'
          type: date
          example: '2019-01-17 11:00:00.000000'
        timezone_type:
          description: 'The timezone type'
          type: string
          example: '3'
        timezone:
          description: 'The timezone'
          type: string
          example: UTC
      type: object
    certification_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/certification_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/framework/certifications
          type: object
      type: object
    certification_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: certifications
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - level
                - picture
                - color
                - flip
              properties:
                title:
                  description: 'The title in french'
                  type: string
                  example: 'PILOT MMP'
                subtitle:
                  description: 'The subtitle in french'
                  type: string
                  example: ''
                level:
                  description: 'The level in french'
                  type: string
                  example: '1'
                picture:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of photo of certification', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of certification', type: object, example: '{''description'': ''photo of Paris office''}' } }
                  type: object
                color:
                  description: 'The color in french'
                  type: string
                  example: '#000000'
                flip:
                  description: 'Transform the resource into an array.'
                  required: [picture, who, what, how]
                  properties: { picture: { description: 'Transform the resource into an array.', required: [url, custom_properties], properties: { url: { description: 'The url of photo of certification', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of certification', type: object, example: '{''description'': ''photo of Paris office''}' } }, type: object }, who: { description: 'The who when card is flip', type: string, example: '1 Month' }, what_1: { description: 'The what 1 when card is flip', type: object, example: 'No business model' }, what_2: { description: 'The what 2 when card is flip', type: object, example: 'No business model' }, what_3: { description: 'The what 3 when card is flip', type: object, example: 'No business model' }, how: { description: 'The how when card is flip', type: object, example: 'No business model' } }
                  type: object
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - level
                - picture
                - color
                - flip
              properties:
                title:
                  description: 'The title in french'
                  type: string
                  example: 'PILOT MMP'
                subtitle:
                  description: 'The subtitle in french'
                  type: string
                  example: ''
                level:
                  description: 'The level in french'
                  type: string
                  example: '1'
                picture:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of photo of certification', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of certification', type: object, example: '{''description'': ''photo of Paris office''}' } }
                  type: object
                color:
                  description: 'The color in french'
                  type: string
                  example: '#000000'
                flip:
                  description: 'Transform the resource into an array.'
                  required: [picture, who, what, how]
                  properties: { picture: { description: 'Transform the resource into an array.', required: [url, custom_properties], properties: { url: { description: 'The url of photo of certification', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of certification', type: object, example: '{''description'': ''photo of Paris office''}' } }, type: object }, who: { description: 'The who when card is flip', type: string, example: '1 Month' }, what_1: { description: 'The what 11 when card is flip', type: object, example: 'No business model' }, what_2: { description: 'The what 2 when card is flip', type: object, example: 'No business model' }, what_3: { description: 'The what 3 when card is flip', type: object, example: 'No business model' }, how: { description: 'The how when card is flip', type: object, example: 'No business model' } }
                  type: object
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/framework/values/1
          type: object
      type: object
    certification_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/certification_with_lang_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/framework/certifications/fr
          type: object
      type: object
    certification_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: certifications
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - title
            - subtitle
            - level
            - picture
            - color
            - flip
          properties:
            title:
              description: 'The title in french'
              type: string
              example: 'PILOT MMP'
            subtitle:
              description: 'The subtitle in french'
              type: string
              example: ''
            level:
              description: 'The level in french'
              type: string
              example: '1'
            picture:
              description: 'Transform the resource into an array.'
              required:
                - url
                - custom_properties
              properties:
                url:
                  description: 'The url of photo of certification'
                  type: string
                  example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg'
                custom_properties:
                  description: 'The custom properties of photo of certification'
                  type: object
                  example: '{''description'': ''photo of Paris office''}'
              type: object
            color:
              description: 'The color in french'
              type: string
              example: '#000000'
            flip:
              description: 'Transform the resource into an array.'
              required:
                - picture
                - who
                - what
                - how
              properties:
                picture:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of photo of certification', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of certification', type: object, example: '{''description'': ''photo of Paris office''}' } }
                  type: object
                who:
                  description: 'The who when card is flip'
                  type: string
                  example: '1 Month'
                what_1:
                  description: 'The what 1 when card is flip'
                  type: object
                  example: 'No business model'
                what_2:
                  description: 'The what 2 when card is flip'
                  type: object
                  example: 'No business model'
                what_3:
                  description: 'The what 3 when card is flip'
                  type: object
                  example: 'No business model'
                how:
                  description: 'The how when card is flip'
                  type: object
                  example: 'No business model'
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/framework/values/1/fr
          type: object
      type: object
    client_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/client_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/clients
          type: object
      type: object
    client_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: clients
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - name
            - logo
          properties:
            name:
              description: 'The name of clients'
              type: string
              example: Safran
            logo:
              description: 'Transform the resource into an array.'
              required:
                - url
                - custom_properties
              properties:
                url:
                  description: 'The url of logo of client'
                  type: string
                  example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg'
                custom_properties:
                  description: 'The custom properties of logo of client'
                  type: object
                  example: '{''description'': ''photo of Paris office''}'
              type: object
          type: object
      type: object
    expertise_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/expertise_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/expertises
          type: object
      type: object
    expertise_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: expertises
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - name
                - slug
                - subtitle
                - description
                - color
              properties:
                name:
                  description: 'The name in french'
                  type: string
                  example: Delivrer
                slug:
                  description: 'The slug in french'
                  type: string
                  example: delivrer
                subtitle:
                  description: 'The subtitle in french'
                  type: string
                  example: 'Assurer la transition vers l''agile...'
                description:
                  description: 'The description in french'
                  type: string
                  example: 'Installer la cross disciplinary d''une Digital Factory'
                color:
                  description: 'The color in specific language'
                  type: string
                  example: '#123456'
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - name
                - slug
                - subtitle
                - description
                - color
              properties:
                name:
                  description: 'The name in english'
                  type: string
                  example: DELIVER
                slug:
                  description: 'The slug in english'
                  type: string
                  example: delivrer
                subtitle:
                  description: 'The subtitle in english'
                  type: string
                  example: 'Ensure the transition to agile'
                description:
                  description: 'The description in english'
                  type: string
                  example: 'Set up cross disciplinary Digital Factory'
                color:
                  description: 'The color in specific language'
                  type: string
                  example: '#123456'
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/expertises/1
          type: object
      type: object
    expertise_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/expertise_with_lang_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/expertises/fr
          type: object
      type: object
    expertise_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: expertises
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - name
            - slug
            - subtitle
            - description
          properties:
            name:
              description: 'The name in specific language'
              type: string
              example: Delivrer
            slug:
              description: 'The slug in specific language'
              type: string
              example: delivrer
            subtitle:
              description: 'The subtitle in specific language'
              type: string
              example: 'Assurer la transition vers l''agile...'
            description:
              description: 'The description in specific language'
              type: string
              example: 'Installer la cross disciplinary d''une Digital Factory'
            color:
              description: 'The color in specific language'
              type: string
              example: '#123456'
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/expertises/1
          type: object
      type: object
    formule_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/formule_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/formules
          type: object
      type: object
    formule_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: formules
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - price
                - options
              properties:
                title:
                  description: 'The title in specific language'
                  type: string
                  example: Delivrer
                subtitle:
                  description: 'The subtitle in specific language'
                  type: string
                  example: 'Assurer la transition vers l''agile...'
                price:
                  description: 'The price in specific language'
                  type: string
                  example: '450'
                options:
                  description: 'Transform the resource into an array.'
                  required: [option_1, option_12]
                  properties: { option_1: { description: 'The option_1 in specific language', type: boolean, example: 'true' }, option_12: { description: 'The option_12 in specific language', type: boolean, example: 'false' } }
                  type: object
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - price
                - options
              properties:
                title:
                  description: 'The title in specific language'
                  type: string
                  example: Delivrer
                subtitle:
                  description: 'The subtitle in specific language'
                  type: string
                  example: 'Assurer la transition vers l''agile...'
                price:
                  description: 'The price in specific language'
                  type: string
                  example: '450'
                options:
                  description: 'Transform the resource into an array.'
                  required: [option_1, option_12]
                  properties: { option_1: { description: 'The option_1 in specific language', type: boolean, example: 'true' }, option_12: { description: 'The option_12 in specific language', type: boolean, example: 'false' } }
                  type: object
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/formules/1
          type: object
      type: object
    formule_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/formule_with_lang_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/formules/fr
          type: object
      type: object
    formule_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: formules
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - title
            - subtitle
            - price
            - options
          properties:
            title:
              description: 'The title in specific language'
              type: string
              example: Delivrer
            subtitle:
              description: 'The subtitle in specific language'
              type: string
              example: 'Assurer la transition vers l''agile...'
            price:
              description: 'The price in specific language'
              type: string
              example: '450'
            options:
              description: 'Transform the resource into an array.'
              required:
                - option_1
                - option_12
              properties:
                option_1:
                  description: 'The option_1 in specific language'
                  type: boolean
                  example: 'true'
                option_12:
                  description: 'The option_12 in specific language'
                  type: boolean
                  example: 'false'
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/formules/1
          type: object
      type: object
    menu_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/menu_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/menus
          type: object
      type: object
    menu_item_collection_resource:
      required:
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/menu_item_resource'
      type: object
    menu_item_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'menu items'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - name
            - type
            - value
            - target
            - parameters
            - enabled
            - children
          properties:
            name:
              description: 'The name of menu item'
              type: string
              example: Réalisations
            type:
              description: 'The type of menu item'
              type: string
              example: static-url
            value:
              description: 'The value of menu item'
              type: string
              example: value
            target:
              description: 'The target of menu item'
              type: string
              example: target
            parameters:
              description: 'The parameters of menu item'
              type: string
              example: 'null'
            enabled:
              description: 'The enabled of menu item'
              type: string
              example: 'true'
            children:
              description: 'The children of menu item'
              type: object
              $ref: '#/components/schemas/menu_item_collection_resource'
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/menus/1
          type: object
      type: object
    menu_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: menus
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - name
                - items
              properties:
                name:
                  description: 'The name in french'
                  type: string
                  example: Menu
                items:
                  description: 'The items in french'
                  type: string
                  $ref: '#/components/schemas/menu_item_collection_resource'
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - name
                - items
              properties:
                name:
                  description: 'The name in english'
                  type: string
                  example: 'Menu US'
                items:
                  description: 'The items in english'
                  type: string
                  $ref: '#/components/schemas/menu_item_collection_resource'
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/menus/1
          type: object
      type: object
    menu_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/menu_with_lang_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/menus/fr
          type: object
      type: object
    menu_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: menus
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - name
            - items
          properties:
            name:
              description: 'The name of menu'
              type: string
              example: Menu
            items:
              description: 'The items of menu'
              type: string
              $ref: '#/components/schemas/menu_item_collection_resource'
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/menus/1/fr
          type: object
      type: object
    office_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/office_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/offices
          type: object
      type: object
    office_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: offices
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - address
            - photo
            - link_gmap
          properties:
            address:
              description: 'Transform the resource into an array.'
              required:
                - address
                - postal_code
                - city
                - country
              properties:
                address:
                  description: 'The address of office'
                  type: string
                  example: '103 rue de Grenelle'
                postal_code:
                  description: 'The postal code of office'
                  type: string
                  example: '75007'
                city:
                  description: 'The city of office'
                  type: string
                  example: Paris
                country:
                  description: 'The country of office'
                  type: string
                  example: France
              type: object
            photo:
              description: 'Transform the resource into an array.'
              required:
                - url
                - custom_properties
              properties:
                url:
                  description: 'The url of photo of office'
                  type: string
                  example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg'
                custom_properties:
                  description: 'The custom properties of photo of office'
                  type: object
                  example: '{''description'': ''photo of Paris office''}'
              type: object
            link_gmap:
              description: 'The google map link of office'
              type: string
              example: 'https://www.google.fr/maps/place/103+rue+de+Grenelle,75007+Paris'
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/offices/1
          type: object
      type: object
    page_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/page_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/pages
          type: object
      type: object
    page_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: pages
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - template
                - slug
                - seo
                - data
                - resources
                - regions
              properties:
                template:
                  description: 'The template'
                  type: string
                  example: Home
                slug:
                  description: 'The slug'
                  type: string
                  example: home
                seo:
                  description: 'Transform the resource into an array.'
                  required: [title, description, image, keywords, follow]
                  properties: { title: { description: 'The title of seo of page', type: string, example: '' }, description: { description: 'The description of seo of page', type: string, example: '' }, image: { description: 'The image of seo of page', type: string, example: 'http://localhost:4646/storage/0b024b6d74c506b423d90f47d28438e3.jpg' }, keywords: { description: 'The keywords of seo of page', type: string, example: '' }, follow: { description: 'The follow of seo of page', type: string, example: '' } }
                  type: object
                data:
                  description: 'The data'
                  type: object
                  example: ''
                resources:
                  description: 'The data'
                  type: object
                  example: ''
                regions:
                  description: 'The data'
                  type: object
                  example: ''
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - template
                - slug
                - seo
                - data
                - resources
                - regions
              properties:
                template:
                  description: 'The template'
                  type: string
                  example: Home
                slug:
                  description: 'The slug'
                  type: string
                  example: home
                seo:
                  description: 'Transform the resource into an array.'
                  required: [title, description, image, keywords, follow]
                  properties: { title: { description: 'The title of seo of page', type: string, example: '' }, description: { description: 'The description of seo of page', type: string, example: '' }, image: { description: 'The image of seo of page', type: string, example: 'http://localhost:4646/storage/0b024b6d74c506b423d90f47d28438e3.jpg' }, keywords: { description: 'The keywords of seo of page', type: string, example: '' }, follow: { description: 'The follow of seo of page', type: string, example: '' } }
                  type: object
                data:
                  description: 'The data'
                  type: object
                  example: ''
                resources:
                  description: 'The data'
                  type: object
                  example: ''
                regions:
                  description: 'The data'
                  type: object
                  example: ''
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/pages/1
          type: object
      type: object
    page_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/page_with_lang_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/pages/fr
          type: object
      type: object
    page_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: pages
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - template
            - slug
            - seo
            - data
            - resources
            - regions
          properties:
            template:
              description: 'The template'
              type: string
              example: Home
            slug:
              description: 'The slug'
              type: string
              example: home
            seo:
              description: 'Transform the resource into an array.'
              required:
                - title
                - description
                - image
                - keywords
                - follow
              properties:
                title:
                  description: 'The title of seo of page'
                  type: string
                  example: ''
                description:
                  description: 'The description of seo of page'
                  type: string
                  example: ''
                image:
                  description: 'The image of seo of page'
                  type: string
                  example: 'http://localhost:4646/storage/0b024b6d74c506b423d90f47d28438e3.jpg'
                keywords:
                  description: 'The keywords of seo of page'
                  type: string
                  example: ''
                follow:
                  description: 'The follow of seo of page'
                  type: string
                  example: ''
              type: object
            data:
              description: 'The data'
              type: object
              example: ''
            resources:
              description: 'The data'
              type: object
              example: ''
            regions:
              description: 'The data'
              type: object
              example: ''
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/pages/1/fr
          type: object
      type: object
    region_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/regions
          type: object
      type: object
    region_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: regions
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - template
                - name
                - data
              properties:
                template:
                  description: 'The template'
                  type: string
                  example: Home
                name:
                  description: 'The name'
                  type: string
                  example: home
                data:
                  description: 'The data'
                  type: object
                  example: ''
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - template
                - name
                - data
              properties:
                template:
                  description: 'The template'
                  type: string
                  example: Home
                name:
                  description: 'The name'
                  type: string
                  example: home
                data:
                  description: 'The data'
                  type: object
                  example: ''
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/regions/1
          type: object
      type: object
    region_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_with_lang_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/regions/fr
          type: object
      type: object
    region_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: regions
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - template
            - name
            - data
          properties:
            template:
              description: 'The template'
              type: string
              example: Home
            name:
              description: 'The name'
              type: string
              example: home
            data:
              description: 'The data'
              type: object
              example: ''
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/regions/1/fr
          type: object
      type: object
    region_contact_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_contact_resource'
      type: object
    region_contact_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'regions contact'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - photo
                - inputs
              properties:
                title:
                  description: 'The title'
                  type: string
                  example: Home
                subtitle:
                  description: 'The subtitle'
                  type: string
                  example: home
                photo:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of photo of contact', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of contact', type: object, example: '{''description'': ''photo of Paris office''}' } }
                  type: object
                inputs:
                  description: 'Transform the resource into an array.'
                  required: [label_input_X, error_input_X, label_button, success_message]
                  properties: { label_input_X: { description: 'The label of input X (X= 1-6)', type: string, example: Nom }, error_input_X: { description: 'The error message of input X (X= 1-6)', type: object, example: 'Le nom est obligatoire' }, label_button: { description: 'The label of button', type: object, example: 'Envoyer ?' }, success_message: { description: 'The success message', type: object, example: send } }
                  type: object
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - photo
                - inputs
              properties:
                title:
                  description: 'The title'
                  type: string
                  example: Home
                subtitle:
                  description: 'The subtitle'
                  type: string
                  example: home
                photo:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of photo of contact', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of contact', type: object, example: '{''description'': ''photo of Paris office''}' } }
                  type: object
                inputs:
                  description: 'Transform the resource into an array.'
                  required: [label_input_X, error_input_X, label_button, success_message]
                  properties: { label_input_X: { description: 'The label of input X (X= 1-6)', type: string, example: Nom }, error_input_X: { description: 'The error message of input X (X= 1-6)', type: object, example: 'Le nom est obligatoire' }, label_button: { description: 'The label of button', type: object, example: 'Envoyer ?' }, success_message: { description: 'The success message', type: object, example: send } }
                  type: object
              type: object
          type: object
      type: object
    region_contact_startup_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_contact_startup_resource'
      type: object
    region_contact_startup_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'regions contact startup'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - photo
                - inputs
              properties:
                title:
                  description: 'The title'
                  type: string
                  example: Home
                subtitle:
                  description: 'The subtitle'
                  type: string
                  example: home
                photo:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of photo of contact', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of contact', type: object, example: '{''description'': ''photo of Paris office''}' } }
                  type: object
                inputs:
                  description: 'Transform the resource into an array.'
                  required: [label_input_X, error_input_X, label_button, success_message]
                  properties: { label_input_X: { description: 'The label of input X (X= 1-6)', type: string, example: Nom }, error_input_X: { description: 'The error message of input X (X= 1-6)', type: object, example: 'Le nom est obligatoire' }, label_button: { description: 'The label of button', type: object, example: 'Envoyer ?' }, success_message: { description: 'The success message', type: object, example: send } }
                  type: object
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - photo
                - inputs
              properties:
                title:
                  description: 'The title'
                  type: string
                  example: Home
                subtitle:
                  description: 'The subtitle'
                  type: string
                  example: home
                photo:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of photo of contact', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of contact', type: object, example: '{''description'': ''photo of Paris office''}' } }
                  type: object
                inputs:
                  description: 'Transform the resource into an array.'
                  required: [label_input_X, error_input_X, label_button, success_message]
                  properties: { label_input_X: { description: 'The label of input X (X= 1-6)', type: string, example: Nom }, error_input_X: { description: 'The error message of input X (X= 1-6)', type: object, example: 'Le nom est obligatoire' }, label_button: { description: 'The label of button', type: object, example: 'Envoyer ?' }, success_message: { description: 'The success message', type: object, example: send } }
                  type: object
              type: object
          type: object
      type: object
    region_contact_startup_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_contact_startup_with_lang_resource'
      type: object
    region_contact_startup_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'regions contact startup'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - title
            - subtitle
            - photo
            - inputs
          properties:
            title:
              description: 'The title'
              type: string
              example: Home
            subtitle:
              description: 'The subtitle'
              type: string
              example: home
            photo:
              description: 'Transform the resource into an array.'
              required:
                - url
                - custom_properties
              properties:
                url:
                  description: 'The url of photo of contact'
                  type: string
                  example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg'
                custom_properties:
                  description: 'The custom properties of photo of contact'
                  type: object
                  example: '{''description'': ''photo of Paris office''}'
              type: object
            inputs:
              description: 'Transform the resource into an array.'
              required:
                - label_input_X
                - error_input_X
                - label_button
                - success_message
              properties:
                label_input_X:
                  description: 'The label of input X (X= 1-6)'
                  type: string
                  example: Nom
                error_input_X:
                  description: 'The error message of input X (X= 1-6)'
                  type: object
                  example: 'Le nom est obligatoire'
                label_button:
                  description: 'The label of button'
                  type: object
                  example: 'Envoyer ?'
                success_message:
                  description: 'The success message'
                  type: object
                  example: send
              type: object
          type: object
      type: object
    region_contact_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_contact_with_lang_resource'
      type: object
    region_contact_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'regions contact'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - title
            - subtitle
            - photo
            - inputs
          properties:
            title:
              description: 'The title'
              type: string
              example: Home
            subtitle:
              description: 'The subtitle'
              type: string
              example: home
            photo:
              description: 'Transform the resource into an array.'
              required:
                - url
                - custom_properties
              properties:
                url:
                  description: 'The url of photo of contact'
                  type: string
                  example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg'
                custom_properties:
                  description: 'The custom properties of photo of contact'
                  type: object
                  example: '{''description'': ''photo of Paris office''}'
              type: object
            inputs:
              description: 'Transform the resource into an array.'
              required:
                - label_input_X
                - error_input_X
                - label_button
                - success_message
              properties:
                label_input_X:
                  description: 'The label of input X (X= 1-6)'
                  type: string
                  example: Nom
                error_input_X:
                  description: 'The error message of input X (X= 1-6)'
                  type: object
                  example: 'Le nom est obligatoire'
                label_button:
                  description: 'The label of button'
                  type: object
                  example: 'Envoyer ?'
                success_message:
                  description: 'The success message'
                  type: object
                  example: send
              type: object
          type: object
      type: object
    region_cookie_banner_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_cookie_banner_resource'
      type: object
    region_cookie_banner_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'regions cookie banner'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - label_button
                - label_link
                - slug_link
              properties:
                title:
                  description: 'The title'
                  type: string
                  example: 'Ce site utilise des cookies'
                subtitle:
                  description: 'The subtitle'
                  type: string
                  example: 'lorem impsun'
                label_button:
                  description: 'The label of button'
                  type: string
                  example: accepter
                label_link:
                  description: 'The label of link'
                  type: string
                  example: 'en savoir plus'
                slug_link:
                  description: 'The slug of link'
                  type: string
                  example: /condition
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - label_button
                - label_link
                - slug_link
              properties:
                title:
                  description: 'The title'
                  type: string
                  example: 'Ce site utilise des cookies'
                subtitle:
                  description: 'The subtitle'
                  type: string
                  example: 'lorem impsun'
                label_button:
                  description: 'The label of button'
                  type: string
                  example: accepter
                label_link:
                  description: 'The label of link'
                  type: string
                  example: 'en savoir plus'
                slug_link:
                  description: 'The slug of link'
                  type: string
                  example: /condition
              type: object
          type: object
      type: object
    region_cookie_banner_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_cookie_with_lang_banner_resource'
      type: object
    region_cookie_banner_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'regions cookie banner'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - title
            - subtitle
            - label_button
            - label_link
            - slug_link
          properties:
            title:
              description: 'The title'
              type: string
              example: 'Ce site utilise des cookies'
            subtitle:
              description: 'The subtitle'
              type: string
              example: 'lorem impsun'
            label_button:
              description: 'The label of button'
              type: string
              example: accepter
            label_link:
              description: 'The label of link'
              type: string
              example: 'en savoir plus'
            slug_link:
              description: 'The slug of link'
              type: string
              example: 'http://localhost/condition'
          type: object
      type: object
    region_talent_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_talent_resource'
      type: object
    region_talent_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'regions talent'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
                - dark
              properties:
                title:
                  description: 'The title'
                  type: string
                  example: Home
                subtitle:
                  description: 'The subtitle'
                  type: string
                  example: home
                dark:
                  description: 'The dark mode'
                  type: string
                  example: 'true'
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - title
                - subtitle
              properties:
                title:
                  description: 'The title'
                  type: string
                  example: Home
                subtitle:
                  description: 'The subtitle'
                  type: string
                  example: home
              type: object
          type: object
      type: object
    region_talent_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/region_talent_with_lang_resource'
      type: object
    region_talent_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'regions talent'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - title
            - subtitle
            - dark
          properties:
            title:
              description: 'The title'
              type: string
              example: Home
            subtitle:
              description: 'The subtitle'
              type: string
              example: home
            dark:
              description: 'The dark mode'
              type: string
              example: 'true'
          type: object
      type: object
    social_media_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/social_media_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/social-media
          type: object
      type: object
    social_media_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'social media'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - name
            - link
          properties:
            name:
              description: 'The name of social media'
              type: string
              example: LinkedIn
            link:
              description: 'The link of social media'
              type: string
              example: 'https://www.linkedin.com'
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/social-media/1
          type: object
      type: object
    team_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/team_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/teams
          type: object
      type: object
    team_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: teams
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - name
                - position
                - avatar
                - color
                - description
                - drawing
                - movie
              properties:
                name:
                  description: 'The name in french'
                  type: string
                  example: Delivrer
                position:
                  description: 'The position in french'
                  type: string
                  example: '1'
                avatar:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of avatar of team', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of avatar of team', type: object, example: '{''description'': ''Avatar of Asako''}' } }
                  type: object
                color:
                  description: 'The color in french'
                  type: string
                  example: '#000000'
                drawing:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of drawing of team', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of drawing of team', type: object, example: '{''description'': ''Drawing of Asako''}' } }
                  type: object
                movie:
                  description: 'The link of movie in french'
                  type: string
                  example: Delivrer
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - name
                - position
                - avatar
                - color
                - description
                - drawing
                - movie
              properties:
                name:
                  description: 'The name in english'
                  type: string
                  example: DELIVER
                position:
                  description: 'The position in english'
                  type: string
                  example: '1'
                avatar:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of avatar of team', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of avatar of team', type: object, example: '{''description'': ''Avatar of Asako''}' } }
                  type: object
                color:
                  description: 'The color in english'
                  type: string
                  example: '#000000'
                description:
                  description: 'The description in english'
                  type: string
                  example: 'Lorem ipsum'
                drawing:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of drawing of team', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of drawing of team', type: object, example: '{''description'': ''Drawing of Asako''}' } }
                  type: object
                movie:
                  description: 'The link of movie in english'
                  type: string
                  example: 'https://www.youtube.com/embed/TYndjeI46'
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/teams/1
          type: object
      type: object
    team_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/team_with_lang_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/teams/fr
          type: object
      type: object
    team_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: teams
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - name
            - position
            - avatar
            - color
            - description
            - drawing
            - movie
          properties:
            name:
              description: 'The name in french'
              type: string
              example: Delivrer
            position:
              description: 'The position in french'
              type: string
              example: delivrer
            avatar:
              description: 'Transform the resource into an array.'
              required:
                - url
                - custom_properties
              properties:
                url:
                  description: 'The url of avatar of team'
                  type: string
                  example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg'
                custom_properties:
                  description: 'The custom properties of avatar of team'
                  type: object
                  example: '{''description'': ''Avatar of Asako''}'
              type: object
            color:
              description: 'The color in specific language'
              type: string
              example: '#123456'
            description:
              description: 'The description in french'
              type: string
              example: 'Lorem ipsum'
            drawing:
              description: 'Transform the resource into an array.'
              required:
                - url
                - custom_properties
              properties:
                url:
                  description: 'The url of drawing of team'
                  type: string
                  example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg'
                custom_properties:
                  description: 'The custom properties of drawing of team'
                  type: object
                  example: '{''description'': ''Drawing of Asako''}'
              type: object
            movie:
              description: 'The link of movie in french'
              type: string
              example: 'https://www.youtube.com/embed/TYndjeI46'
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/teams/1/fr
          type: object
      type: object
    use_case_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/use_case_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/use-cases
          type: object
      type: object
    use_case_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'use cases'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - slug
                - photo
                - logo
                - resume
                - seo
              properties:
                slug:
                  description: 'The slug of use case '
                  type: string
                  example: lorem-ipsum
                photo:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of photo of use case', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of use case', type: object, example: '{''description'': ''photo of use case''}' } }
                  type: object
                logo:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of logo of use case', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of logo of use case', type: object, example: '{''description'': ''logo of usee case''}' } }
                  type: object
                resume:
                  description: 'The resume of use case '
                  type: string
                  example: 'Lorem Ipsum .... '
                seo:
                  description: 'Transform the resource into an array.'
                  required: [id, title, description, keywords, follow_type, image, sociale, params, seo_metaable_id, image_path]
                  properties: { id: { description: 'The id of seo of use case', type: string, example: '1' }, title: { description: 'The title of seo of use case', type: string, example: 'Titre du SEO' }, description: { description: 'The description of seo of use case', type: string, example: 'Description du SEO' }, keywords: { description: 'The keywords of seo of use case', type: string, example: 'keywords, SEO' }, follow_type: { description: 'The follow_type of seo of use case', type: string, example: 'index, follow' }, image: { description: 'The image of seo of use case', type: string, example: 4oCVFhLkVXGyLZyMMExyI8gXV12nWj0LS46H5Bhv.jpeg }, sociale: { description: 'The sociale of seo of use case', type: string, example: '' }, params: { description: 'The params of seo of use case', type: object, example: '{''title_format'': '':text''},' }, seo_metaable_id: { description: 'The seo_metaable_id of seo of use case', type: string, example: '1' }, image_path: { description: 'The image path of seo of use case', type: string, example: 'http://localhost:4646/storage/4oCVFhLkVXGyLZyMMExyI8gXV12nWj0LS46H5Bhv.jpeg' } }
                  type: object
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - slug
                - photo
                - logo
                - resume
                - seo
              properties:
                slug:
                  description: 'The slug of use case '
                  type: string
                  example: lorem-ipsum
                photo:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of photo of use case', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of photo of use case', type: object, example: '{''description'': ''photo of use case''}' } }
                  type: object
                logo:
                  description: 'Transform the resource into an array.'
                  required: [url, custom_properties]
                  properties: { url: { description: 'The url of logo of use case', type: string, example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg' }, custom_properties: { description: 'The custom properties of logo of use case', type: object, example: '{''description'': ''logo of usee case''}' } }
                  type: object
                resume:
                  description: 'The resume of use case '
                  type: string
                  example: 'Lorem Ipsum .... '
                seo:
                  description: 'Transform the resource into an array.'
                  required: [id, title, description, keywords, follow_type, image, sociale, params, seo_metaable_id, image_path]
                  properties: { id: { description: 'The id of seo of use case', type: string, example: '1' }, title: { description: 'The title of seo of use case', type: string, example: 'Titre du SEO' }, description: { description: 'The description of seo of use case', type: string, example: 'Description du SEO' }, keywords: { description: 'The keywords of seo of use case', type: string, example: 'keywords, SEO' }, follow_type: { description: 'The follow_type of seo of use case', type: string, example: 'index, follow' }, image: { description: 'The image of seo of use case', type: string, example: 4oCVFhLkVXGyLZyMMExyI8gXV12nWj0LS46H5Bhv.jpeg }, sociale: { description: 'The sociale of seo of use case', type: string, example: '' }, params: { description: 'The params of seo of use case', type: object, example: '{''title_format'': '':text''},' }, seo_metaable_id: { description: 'The seo_metaable_id of seo of use case', type: string, example: '1' }, image_path: { description: 'The image path of seo of use case', type: string, example: 'http://localhost:4646/storage/4oCVFhLkVXGyLZyMMExyI8gXV12nWj0LS46H5Bhv.jpeg' } }
                  type: object
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/use-cases/1
          type: object
      type: object
    use_case_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/use_case_with_lang_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/use-cases/fr
          type: object
      type: object
    use_case_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: 'use cases'
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - slug
            - photo
            - logo
            - resume
            - seo
          properties:
            slug:
              description: 'The slug of use case '
              type: string
              example: lorem-ipsum
            photo:
              description: 'Transform the resource into an array.'
              required:
                - url
                - custom_properties
              properties:
                url:
                  description: 'The url of photo of use case'
                  type: string
                  example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg'
                custom_properties:
                  description: 'The custom properties of photo of use case'
                  type: object
                  example: '{''description'': ''photo of use case''}'
              type: object
            logo:
              description: 'Transform the resource into an array.'
              required:
                - url
                - custom_properties
              properties:
                url:
                  description: 'The url of logo of use case'
                  type: string
                  example: 'http://localhost:4646/storage/media/1/0b024b6d74c506b423d90f47d28438e3.jpg'
                custom_properties:
                  description: 'The custom properties of logo of use case'
                  type: object
                  example: '{''description'': ''logo of usee case''}'
              type: object
            resume:
              description: 'The resume of use case '
              type: string
              example: 'Lorem Ipsum .... '
            seo:
              description: 'Transform the resource into an array.'
              required:
                - id
                - title
                - description
                - keywords
                - follow_type
                - image
                - sociale
                - params
                - seo_metaable_id
                - image_path
              properties:
                id:
                  description: 'The id of seo of use case'
                  type: string
                  example: '1'
                title:
                  description: 'The title of seo of use case'
                  type: string
                  example: 'Titre du SEO'
                description:
                  description: 'The description of seo of use case'
                  type: string
                  example: 'Description du SEO'
                keywords:
                  description: 'The keywords of seo of use case'
                  type: string
                  example: 'keywords, SEO'
                follow_type:
                  description: 'The follow_type of seo of use case'
                  type: string
                  example: 'index, follow'
                image:
                  description: 'The image of seo of use case'
                  type: string
                  example: 4oCVFhLkVXGyLZyMMExyI8gXV12nWj0LS46H5Bhv.jpeg
                sociale:
                  description: 'The sociale of seo of use case'
                  type: string
                  example: ''
                params:
                  description: 'The params of seo of use case'
                  type: object
                  example: '{''title_format'': '':text''},'
                seo_metaable_id:
                  description: 'The seo_metaable_id of seo of use case'
                  type: string
                  example: '1'
                image_path:
                  description: 'The image path of seo of use case'
                  type: string
                  example: 'http://localhost:4646/storage/4oCVFhLkVXGyLZyMMExyI8gXV12nWj0LS46H5Bhv.jpeg'
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/use-cases/1
          type: object
      type: object
    value_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/value_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/framework/values
          type: object
      type: object
    value_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: values
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - fr
            - en
          properties:
            fr:
              description: 'Transform the resource into an array.'
              required:
                - title
                - logo
                - resume
                - flip
              properties:
                title:
                  description: 'The title in french'
                  type: string
                  example: 'PILOT MMP'
                logo:
                  description: 'The logo in french'
                  type: string
                  example: ''
                resume:
                  description: 'The  resume in french'
                  type: string
                  example: 'Generate first revenues with early adopters'
                flip:
                  description: 'Transform the resource into an array.'
                  required: [title_flip, resume_flip]
                  properties: { title_flip: { description: 'The title when card is flip', type: string, example: '1 Month' }, resume_flip: { description: 'The resume when card is flip', type: object, example: 'No business model' } }
                  type: object
              type: object
            en:
              description: 'Transform the resource into an array.'
              required:
                - title
                - logo
                - resume
                - flip
              properties:
                title:
                  description: 'The title in french'
                  type: string
                  example: 'PILOT MMP'
                logo:
                  description: 'The logo in french'
                  type: string
                  example: ''
                resume:
                  description: 'The  resume in french'
                  type: string
                  example: 'Generate first revenues with early adopters'
                flip:
                  description: 'Transform the resource into an array.'
                  required: [title_flip, resume_flip]
                  properties: { title_flip: { description: 'The title when card is flip', type: string, example: '1 Month' }, resume_flip: { description: 'The resume when card is flip', type: object, example: 'No business model' } }
                  type: object
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/framework/values/1
          type: object
      type: object
    value_with_lang_collection_resource:
      required:
        - link
        - data
      properties:
        data:
          description: 'Transform the resource into an array.'
          type: array
          items:
            $ref: '#/components/schemas/value_with_lang_resource'
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/framework/values/fr
          type: object
      type: object
    value_with_lang_resource:
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          description: 'Transform the resource into an array.'
          type: string
          example: values
        id:
          $ref: '#/components/schemas/resource_id'
        attributes:
          description: 'Transform the resource into an array.'
          required:
            - title
            - logo
            - resume
            - flip
          properties:
            title:
              description: 'The title in french'
              type: string
              example: POC
            logo:
              description: 'The logo in french'
              type: string
              example: ''
            resume:
              description: 'The  resume in french'
              type: string
              example: ''
            flip:
              description: 'Transform the resource into an array.'
              required:
                - title_flip
                - resume_flip
              properties:
                title_flip:
                  description: 'The title when card is flip'
                  type: string
                  example: '1 Month'
                resume_flip:
                  description: 'The resume when card is flip'
                  type: object
                  example: 'No business model'
              type: object
          type: object
        links:
          description: 'Transform the resource into an array.'
          required:
            - self
          properties:
            self:
              description: 'Transform the resource into an array.'
              type: string
              format: uri
              example: /api/framework/values/1/fr
          type: object
      type: object
  securitySchemes:
    bearer:
      type: http
      name: bearerAuth
      bearerFormat: JWT
      scheme: bearer
